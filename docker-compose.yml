version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: rehearsal-scheduler-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rehearsal_scheduler
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  # Backend API
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: rehearsal-scheduler-server
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/rehearsal_scheduler
      JWT_SECRET: your_jwt_secret
      JWT_EXPIRE: 24h
      SENDGRID_API_KEY: your_sendgrid_api_key
      AWS_ACCESS_KEY_ID: your_aws_access_key
      AWS_SECRET_ACCESS_KEY: your_aws_secret_key
      AWS_REGION: us-east-1
      AWS_S3_BUCKET: your-bucket-name
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped
    command: npm run dev

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: rehearsal-scheduler-client
    ports:
      - "3000:3000"
    depends_on:
      - server
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped
    command: npm start

# Volumes
volumes:
  postgres_data:

# Networks
networks:
  app-network:
    driver: bridge